{"version":3,"sources":["bundle.js","app.module.js","details/details.module.js","layout/layout.module.js","list/list.module.js","constants.js","details/details.config.js","details/details.controller.js","details/details.service.js","details/directives/details.directive.js","layout/directives/header.directive.js","list/list.config.js","list/list.controller.js","list/list.service.js"],"names":["configFunction","$urlRouterProvider","otherwise","run","$rootScope","$state","$on","angular","module","config","$inject","constant","detailsConfig","$stateProvider","state","url","template","controller","controllerAs","DetailsController","Details","getDetails","params","id","vm","loading","findById","get","$promise","then","res","pokemon","getByUrl","species","undefined","this","$resource","DETAILS_URL","update","method","service","factory","myDetails","restrict","templateUrl","directive","myHeader","scope","listConfig","ListController","List","FORMS_URL","refresh","getListByUrl","list","previousURL","previous","nextURL","next","newList","length","results","i","entry","sprite_url","sprites","front_default","name","push","currentUrl"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';{var configFunction=function configFunction($urlRouterProvider){$urlRouterProvider.otherwise('/list/');};var run=function run($rootScope,$state){$rootScope.$on('$stateChangeSuccess',function(){return $rootScope.$state=$state;});// $rootScope.$on('$stateChangeError', () => $state.go('sign-in'));\n};angular.module('pokedex',[// Angular modules\n'ui.router',// Third-party modules\n'angularSpinner','ngResource',// Custom modules\n'pokedex.layout','pokedex.list','pokedex.details']).config(configFunction).run(run);configFunction.$inject=['$urlRouterProvider'];run.$inject=['$rootScope','$state'];}\n'use strict';{angular.module('pokedex.details',[]);}\n'use strict';{angular.module('pokedex.layout',[]);}\n'use strict';{angular.module('pokedex.list',['ui.router']);}\n'use strict';{angular.module('pokedex').constant('FORMS_URL','https://pokeapi.co/api/v2/pokemon-form/').constant('DETAILS_URL','https://pokeapi.co/api/v2/pokemon/');}\n'use strict';{var detailsConfig=function detailsConfig($stateProvider){$stateProvider.state('list.details',{url:'/:id',template:'<div my-details></div>',controller:'DetailsController',controllerAs:'vm'});};angular.module('pokedex.details').config(detailsConfig);detailsConfig.$inject=['$stateProvider'];}\n'use strict';{var DetailsController=function DetailsController($state,Details){var vm=this;vm.pokemon={};vm.species={};vm.getDetails=getDetails;vm.getDetails();/////////////////////\nfunction getDetails(){if($state.params.id){vm.loading=true;Details.findById($state.params.id).get().$promise.then(function(res){vm.pokemon=res;Details.getByUrl(res.species.url).get().$promise.then(function(res){return vm.species=res;});}).finally(function(){return vm.loading=false;});}else{vm.pokemon.id=undefined;}}};'use strict';angular.module('pokedex.details').controller('DetailsController',DetailsController);DetailsController.$inject=['$state','Details'];}\n'use strict';{var Details=function Details($resource,DETAILS_URL){var service={findById:findById,getByUrl:getByUrl};return service;///////////////\nfunction findById(id){return $resource(''+DETAILS_URL+id,null,{update:{method:'PUT'}});}function getByUrl(url){return $resource(url,null,{update:{method:'PUT'}});}};angular.module('pokedex.details').factory('Details',Details);Details.$inject=['$resource','DETAILS_URL'];}\n'use strict';{var myDetails=function myDetails(){return{restrict:'EA',templateUrl:'details/directives/details.html'};};angular.module('pokedex.details').directive('myDetails',myDetails);}\n'use strict';{var myHeader=function myHeader(){return{restrict:'AE',templateUrl:'layout/directives/header.html',scope:{}};};angular.module('pokedex.layout').directive('myHeader',myHeader);}\n'use strict';{var listConfig=function listConfig($stateProvider){$stateProvider.state('list',{url:'/list',templateUrl:'list/list.html',controller:'ListController',controllerAs:'vm'});};angular.module('pokedex.list').config(listConfig);listConfig.$inject=['$stateProvider'];}\n'use strict';{var ListController=function ListController(List,FORMS_URL){var vm=this;vm.list=[];vm.currentUrl=FORMS_URL;vm.previousURL=null;vm.nextURL=null;vm.refresh=refresh;vm.previous=previous;vm.next=next;vm.refresh(vm.currentUrl);/////////////////////\nfunction refresh(url){vm.loading=true;List.getListByUrl(url).get().$promise.then(function(list){vm.previousURL=list.previous;vm.nextURL=list.next;var newList=[];var length=list.results.length;for(var i=0;i<length;i++){List.getListByUrl(list.results[i].url).get().$promise.then(function(res){var entry={};entry.sprite_url=res.sprites.front_default;entry.id=res.id;entry.name=res.name;newList.push(entry);});}vm.list=newList;}).finally(function(){return vm.loading=false;});}function previous(){if(vm.previousURL){vm.currentUrl=vm.previousURL;vm.refresh(vm.currentUrl);}}function next(){if(vm.nextURL){vm.currentUrl=vm.nextURL;vm.refresh(vm.currentUrl);}}};angular.module('pokedex.list').controller('ListController',ListController);ListController.$inject=['List','FORMS_URL'];}\n'use strict';{var List=function List($resource){var service={getListByUrl:getListByUrl};return service;///////////////\nfunction getListByUrl(url){return $resource(url,null,{update:{method:'PUT'}});}};angular.module('pokedex.list').factory('List',List);List.$inject=['$resource'];}","{\n  angular\n    .module('pokedex', [\n      // Angular modules\n      'ui.router',\n\n      // Third-party modules\n      'angularSpinner',\n      'ngResource',\n\n      // Custom modules\n      'pokedex.layout',\n      'pokedex.list',\n      'pokedex.details',\n    ])\n    .config(configFunction)\n    .run(run);\n\n  configFunction.$inject = ['$urlRouterProvider'];\n  function configFunction($urlRouterProvider) {\n    $urlRouterProvider.otherwise('/list/');\n  }\n\n  run.$inject = ['$rootScope', '$state'];\n  function run($rootScope, $state) {\n    $rootScope.$on('$stateChangeSuccess', () => $rootScope.$state = $state);\n\n    // $rootScope.$on('$stateChangeError', () => $state.go('sign-in'));\n  }\n}\n","{\n  angular\n    .module('pokedex.details', []);\n}\n","{\n  angular.module('pokedex.layout', []);\n}\n","{\n  angular\n    .module('pokedex.list', [ 'ui.router' ]);\n}\n","{\n  angular\n    .module('pokedex')\n    .constant('FORMS_URL', 'https://pokeapi.co/api/v2/pokemon-form/')\n    .constant('DETAILS_URL', 'https://pokeapi.co/api/v2/pokemon/');\n}\n","{\n  angular\n    .module('pokedex.details')\n    .config(detailsConfig);\n\n  detailsConfig.$inject = ['$stateProvider'];\n  function detailsConfig($stateProvider) {\n    $stateProvider\n      .state('list.details', {\n        url: '/:id',\n        template: '<div my-details></div>',\n        controller: 'DetailsController',\n        controllerAs: 'vm'\n      });\n  }\n}\n","{\n  'use strict';\n\n  angular\n    .module('pokedex.details')\n    .controller('DetailsController', DetailsController);\n\n  DetailsController.$inject = ['$state', 'Details'];\n  function DetailsController($state, Details) {\n    const vm = this;\n\n    vm.pokemon = {};\n    vm.species = {};\n    vm.getDetails = getDetails;\n\n    vm.getDetails();\n\n    /////////////////////\n\n    function getDetails() {\n      if ($state.params.id) {\n        vm.loading = true;\n        Details.findById($state.params.id).get().$promise\n          .then(res => {\n            vm.pokemon = res;\n            Details.getByUrl(res.species.url).get().$promise\n            .then(res => vm.species = res);\n          })\n          .finally(() => vm.loading = false);\n      }\n      else {\n        vm.pokemon.id = undefined;\n      }\n    }\n\n  }\n}\n","{\n  angular\n    .module('pokedex.details')\n    .factory('Details', Details);\n\n  Details.$inject = ['$resource', 'DETAILS_URL'];\n  function Details($resource, DETAILS_URL) {\n    const service = {\n      findById: findById,\n      getByUrl: getByUrl,\n    };\n\n    return service;\n\n    ///////////////\n\n    function findById(id) {\n      return $resource(`${DETAILS_URL}${id}`, null, {\n        update: { method: 'PUT' },\n      });\n    }\n\n    function getByUrl(url) {\n      return $resource(url, null, {\n        update: { method: 'PUT' },\n      });\n    }\n  }\n}\n","{\n  angular\n    .module('pokedex.details')\n    .directive('myDetails', myDetails);\n\n  function myDetails() {\n    return {\n      restrict: 'EA',\n      templateUrl: 'details/directives/details.html'\n    };\n  }\n}\n","{\n  angular\n    .module('pokedex.layout')\n    .directive('myHeader', myHeader);\n\n  function myHeader() {\n    return {\n      restrict: 'AE',\n      templateUrl: 'layout/directives/header.html',\n      scope: {},\n    };\n  }\n}\n","{\n  angular\n    .module('pokedex.list')\n    .config(listConfig);\n\n  listConfig.$inject = ['$stateProvider'];\n  function listConfig($stateProvider) {\n    $stateProvider\n      .state('list', {\n        url: '/list',\n        templateUrl: 'list/list.html',\n        controller: 'ListController',\n        controllerAs: 'vm',\n      });\n  }\n}\n","{\n  angular\n    .module('pokedex.list')\n    .controller('ListController', ListController);\n\n  ListController.$inject = ['List', 'FORMS_URL'];\n  function ListController(List, FORMS_URL) {\n    const vm = this;\n    vm.list = [];\n    vm.currentUrl = FORMS_URL;\n    vm.previousURL = null;\n    vm.nextURL = null;\n    vm.refresh = refresh;\n    vm.previous = previous;\n    vm.next = next;\n\n    vm.refresh(vm.currentUrl);\n\n    /////////////////////\n\n    function refresh(url) {\n      vm.loading = true;\n      List.getListByUrl(url).get().$promise\n        .then(list => {\n          vm.previousURL = list.previous;\n          vm.nextURL = list.next;\n\n          var newList = [];\n          var length = list.results.length;\n          for (var i = 0; i < length; i++) {\n            List.getListByUrl(list.results[i].url).get().$promise\n              .then(res => {\n                var entry = {};\n                entry.sprite_url = res.sprites.front_default;\n                entry.id = res.id;\n                entry.name = res.name;\n                newList.push(entry);\n              });\n          }\n          vm.list = newList;\n        })\n        .finally(() => vm.loading = false);\n    }\n\n    function previous() {\n      if (vm.previousURL) {\n        vm.currentUrl = vm.previousURL;\n        vm.refresh(vm.currentUrl);\n      }\n    }\n\n    function next() {\n      if (vm.nextURL) {\n        vm.currentUrl = vm.nextURL;\n        vm.refresh(vm.currentUrl);\n      }\n    }\n  }\n}\n","{\n  angular\n    .module('pokedex.list')\n    .factory('List', List);\n\n  List.$inject = ['$resource'];\n  function List($resource) {\n    const service = {\n      getListByUrl: getListByUrl,\n    };\n\n    return service;\n\n    ///////////////\n\n    function getListByUrl(url) {\n      return $resource(url, null, {\n        update: { method: 'PUT' },\n      });\n    }\n  }\n}\n"],"sourceRoot":"/source/"}